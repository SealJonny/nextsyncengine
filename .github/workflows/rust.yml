name: Rust CI with Target

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu # Native Linux target
          - x86_64-pc-windows-gnu # Cross Compiler for Windows

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }} # Install the target for each matrix build

    - name: Cache Cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache Cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-${{ matrix.target }}-

    - name: Build the project for the target
      run: cargo build --verbose --target ${{ matrix.target }}

    - name: Run tests for the target
      run: cargo test --verbose --target ${{ matrix.target }}

    - name: Run linter (optional)
      run: cargo fmt -- --check

    - name: Run Clippy (optional)
      run: cargo clippy -- -D warnings --target ${{ matrix.target }}
